name: Build & Release APK

on:
 push:
   branches:
     - main
   tags:
     - "v*"
   
jobs:
 apk:
   name: Generate APK
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v2.4.0
       with:
        fetch-depth: 0  
     - name: Setup JDK
       uses: actions/setup-java@v2.5.0
       with:
         distribution: temurin
         java-version: "11"
     - name: Set execution flag for gradlew
       run: chmod +x gradlew
     - name: Build APK
       run: bash ./gradlew assembleDebug --stacktrace
     - name: Upload APK
       uses: actions/upload-artifact@v1
       with:
         name: apk
         path: app/build/outputs/apk/debug/app-debug.apk
         
 release:
   name: Release APK
   needs: apk
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v2
     - name: set up JDK 1.8
       uses: actions/setup-java@v1
       with:
          java-version: 1.8    
     - name: Get Android version
       id: version
       uses: ltDino/android-get-version-action@v1.0
       with:
          gradlePath: app/build.gradle
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: apk     
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_REPO }}
       with:
         tag_name: ${{ steps.version.outputs.versionName }}
         release_name: ${{ steps.version.outputs.versionName }}
     - name: Upload Release APK
       id: upload_release_asset
       uses: actions/upload-release-asset@v1.0.1
       env:
         GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_REPO }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: apk/app-debug.apk
         asset_name: '${{ github.event.repository.name }}_v${{ steps.version.outputs.versionName }}.apk'
         asset_content_type: application/zip
